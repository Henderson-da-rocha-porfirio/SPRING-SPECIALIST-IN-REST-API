# criacao da tabela realizando o 'drop' ( é preciso comentar os dois abaixo para não ficar 'dropando' e 'reconstruindo' a tabela toda vez ):
#spring.jpa.hibernate.ddl-auto=create
#Fazendo ddl-auto ficar update para não precisar apagar todas as vezes as tabelas.
#spring.jpa.hibernate.ddl-auto=update

# criacao de tabela automaticamente
#spring.jpa.generate-ddl=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL94Dialect

spring.datasource.driverClassName = org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://localhost:5432/dbfoods
spring.datasource.username = postgres
spring.datasource.password = password

spring.jpa.show-sql=true
spring.session.store-type=none

# Dialeto para postgresql
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL93Dialect

#Configurando o pool de conexões
#spring.datasource.hikari.connection-timeout=30000
#spring.datasource.hikari.idle-timeout=600000
#spring.datasource.hikari.max-lifetime=1800000
#spring.datasource.hikari.connection-test-query=SELECT 1
#spring.datasource.hikari.maximum-pool-size=40
#spring.datasource.hikari.minimum-idle=8
#spring.datasource.hikari.initialization-fail-timeout=2000
#spring.datasource.hikari.isolate-internal-queries=true
#spring.datasource.hikari.validation-timeout=3000
#spring.datasource.hikari.data-source-properties.cachePrepStmts=true
#spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
#spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
#spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
#spring.datasource.hikari.data-source-properties.useLocalSessionState=true
#spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
#spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
#spring.datasource.hikari.data-source-properties.cacheServerConfiguration=true
#spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
#spring.datasource.hikari.data-source-properties.maintainTimeStats=false
